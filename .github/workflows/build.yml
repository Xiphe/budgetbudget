name: build & release

on: push

jobs:
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v1
        id: dependencies-v1
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-dependencies-v1-
      - run: npm install
        if: steps.dependencies-v1.outputs.cache-hit != 'true'
        env:
          ADBLOCK: true
      - run: npm test
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v1
        id: dependencies-v1
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-dependencies-v1-
      - run: npm install
        if: steps.dependencies-v1.outputs.cache-hit != 'true'
        env:
          ADBLOCK: true
      - uses: cypress-io/github-action@v2
        with:
          parallel: true
          record: true
          group: 2x-ubuntu-node-12
          start: npm run start:testserver
          wait-on: http://localhost:8765
        env:
          PORT: 8765
          CYPRESS_VIDEO: true
          CYPRESS_BASE_URL: http://localhost:8765
          CYPRESS_RECORD_KEY: ${{ secrets.cypress_record_key }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release:
    needs: [jest, test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v1
        id: dependencies-v1
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-dependencies-v1-
      - run: npm install
        if: steps.dependencies-v1.outputs.cache-hit != 'true'
        env:
          CYPRESS_INSTALL_BINARY: 0
          ADBLOCK: true
      - name: Prepare for app notarization
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
      - run: npx --no-install semantic-release || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.mac_certs }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
